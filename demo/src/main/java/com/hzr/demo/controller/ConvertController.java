package com.hzr.demo.controller;import com.hzr.demo.common.BaseConfig;import com.hzr.demo.entity.FileEntity;import com.hzr.demo.service.FileService;import org.apache.commons.io.FileUtils;import org.ofdrw.converter.ConvertHelper;import org.ofdrw.converter.FontLoader;import org.ofdrw.converter.export.OFDExporter;import org.ofdrw.converter.export.PDFExporterPDFBox;import org.ofdrw.graphics2d.OFDGraphicsDocument;import org.ofdrw.graphics2d.OFDPageGraphics2D;import org.ofdrw.reader.OFDReader;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.ui.Model;import org.springframework.web.bind.annotation.GetMapping;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestPart;import org.springframework.web.multipart.MultipartFile;import java.awt.*;import java.io.File;import java.io.IOException;import java.nio.file.Path;import java.nio.file.Paths;import java.time.LocalDateTime;import java.util.List;/** * @Classname ConvertController * @Author: hzr * @Description TODO * @Version 1.0.0 * @Date 2023/12/28 10:07 * @Created by 22906 */@Controller@RequestMapping("/convert")public class ConvertController {    @Autowired    private FileService fileService;    @Autowired    private BaseConfig baseConfig;    @GetMapping("/index")    public String index(Model model) {        List<FileEntity> all = fileService.findAll();        model.addAttribute("data",all);        return "convert";    }    @GetMapping("/ofdview")    public String ofdview(Model model) throws IOException {//        List<FileEntity> all = fileService.findAll();//        model.addAttribute("data",all);        Path ofdIn = Paths.get("E:\\upload_pdfjs\\ofd_file\\namespace_no_std.ofd");        Path htmlOut = Paths.get("target/999.ofd/2.html");        // 2. [可选]配置字体，别名，扫描目录等        // FontLoader.getInstance().addAliasMapping(null, "小标宋体", "方正小标宋简体", "方正小标宋简体")        // FontLoader.getInstance().scanFontDir(new File("src/test/resources/fonts"));        // 3. 配置参数（HTML页面宽度(px)），转换并存储HTML到文件。//            ConvertHelper.toHtml(ofdIn, htmlOut, 1000);        String htmlStr = ConvertHelper.toHtmlStr(ofdIn, htmlOut, 1000);        System.out.println(htmlStr);        OFDReader reader = new OFDReader(ofdIn);        int pages = reader.getNumberOfPages();        model.addAttribute("data",htmlStr);        model.addAttribute("pages",pages);        return "/test";    }    @RequestMapping("/topdf")    public String ConvertPdf(@RequestPart("file") MultipartFile file,Model model) throws Exception{        FileEntity fileEntity = new FileEntity();        String fileName = file.getOriginalFilename();        File from = new File(baseConfig.getUploadPath() + fileName);        File to = new File(baseConfig.getFileSignPath() + fileName);        FileUtils.copyInputStreamToFile(file.getInputStream(), from);        fileEntity.setFileName(fileName.substring(0, fileName.lastIndexOf(".")));        fileEntity.setFilePath("E:\\upload_pdfjs\\ofd_file\\test\\HelloWorld.pdf");        fileEntity.setFileSignPath("E:\\upload_pdfjs\\ofd_file\\test\\HelloWorld.pdf");        fileEntity.setFileSize(file.getSize() / 1024 + "KB");        fileEntity.setCreateTime(LocalDateTime.now());        fileEntity.setFileType(fileName.substring(fileName.lastIndexOf(".")));        fileService.save(fileEntity);        FontLoader.DEBUG = true;        // 为不规范的字体名创建映射        FontLoader.getInstance()                .addAliasMapping("小标宋体", "方正小标宋简体")                .addSimilarFontReplaceRegexMapping(".*SimSun.*", "SimSun");        long start = System.currentTimeMillis();//        Path dst = Paths.get(from.getPath());        try {            ConvertHelper.toPdf(Paths.get(from.getPath()), Paths.get("E:\\upload_pdfjs\\ofd_file\\test\\HelloWorld.pdf"));            System.out.printf(">> 总计花费: %dms\n", System.currentTimeMillis() - start);        }catch (Exception e){            e.printStackTrace();        }//        Path pdfPath = Paths.get("E:\\upload_pdfjs\\ofd_file\\test", "HelloWorld.pdf");//        try (OFDExporter exporter = new PDFExporterPDFBox(dst, pdfPath)) {//            exporter.export();//        }        List<FileEntity> all = fileService.findAll();        model.addAttribute("data",all);        return "redirect:/convert/index";    }}