package com.hzr.demo.signController;import com.hzr.demo.common.FileSingUtils;import com.hzr.demo.common.SplitUtil;import com.hzr.demo.entity.FileEntity;import com.hzr.demo.repository.FileRepository;import jakarta.servlet.http.HttpServletResponse;import org.apache.commons.io.FileUtils;import org.dom4j.DocumentException;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.core.io.InputStreamResource;import org.springframework.http.HttpHeaders;import org.springframework.http.MediaType;import org.springframework.http.ResponseEntity;import org.springframework.stereotype.Controller;import org.springframework.ui.Model;import org.springframework.web.bind.annotation.GetMapping;import org.springframework.web.bind.annotation.PathVariable;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.multipart.MultipartFile;import java.io.File;import java.io.FileInputStream;import java.io.IOException;import java.security.GeneralSecurityException;import java.util.List;import java.util.Optional;/** * @Classname demoController * @Author: hzr * @Description TODO * @Version 1.0.0 * @Date 2023/12/6 10:56 * @Created by 22906 */@Controllerpublic class demoController {    @Autowired    private FileRepository repository;    @RequestMapping("/view")    public String index(Model model) {        List<FileEntity> all = repository.findAllFile();        model.addAttribute("data",all);//        model.addAttribute("data","SpringBoot 成功集成 Thymeleaf 模版！");        return "index";    }    @RequestMapping("/upload")    public String upload(MultipartFile file, Model model) throws IOException {        FileEntity fileEntity = new FileEntity();        String fileName = file.getOriginalFilename();        File dest = new File("E:\\upload_pdfjs\\ofd_file\\signfile\\" + fileName);        File to = new File("E:\\upload_pdfjs\\ofd_file\\sign\\" + fileName);        FileUtils.copyInputStreamToFile(file.getInputStream(), dest);        try {            System.out.println(dest.getPath());            FileSingUtils.setFileSing(dest,to);        } catch (Exception e) {            throw new RuntimeException(e);        }        fileEntity.setFileName(fileName);        fileEntity.setFilePath(dest.getPath());        repository.save(fileEntity);        List<FileEntity> all = repository.findAll();        model.addAttribute("data",all);        return "redirect:/view";    }    @GetMapping(value = "/download")    public ResponseEntity<InputStreamResource> download() throws IOException {        File file = new File("E:\\upload_pdfjs\\ofd_file\\sign\\namespace_no_std.ofd");        MediaType mediaType = MediaType.parseMediaType("application/pdf");        InputStreamResource resource = new InputStreamResource(new FileInputStream(file));        return ResponseEntity.ok()                .header(HttpHeaders.CONTENT_DISPOSITION, "attachment;filename=" + file.getName())                .contentType(mediaType)                .contentLength(file.length())                .body(resource);    }}